// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: AssetMantle/schema/data/base/linked_data.proto

package base

import (
	fmt "fmt"
	base "github.com/AssetMantle/schema/ids/base"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LinkedData struct {
	ResourceID      *base.HashID   `protobuf:"bytes,1,opt,name=resource_i_d,json=resourceID,proto3" json:"resource_i_d,omitempty"`
	ExtensionID     *base.StringID `protobuf:"bytes,2,opt,name=extension_i_d,json=extensionID,proto3" json:"extension_i_d,omitempty"`
	ServiceEndpoint string         `protobuf:"bytes,3,opt,name=service_endpoint,json=serviceEndpoint,proto3" json:"service_endpoint,omitempty"`
}

func (m *LinkedData) Reset()         { *m = LinkedData{} }
func (m *LinkedData) String() string { return proto.CompactTextString(m) }
func (*LinkedData) ProtoMessage()    {}
func (*LinkedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a39ae47b07df7c69, []int{0}
}
func (m *LinkedData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LinkedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LinkedData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LinkedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkedData.Merge(m, src)
}
func (m *LinkedData) XXX_Size() int {
	return m.Size()
}
func (m *LinkedData) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkedData.DiscardUnknown(m)
}

var xxx_messageInfo_LinkedData proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LinkedData)(nil), "AssetMantle.schema.data.base.LinkedData")
}

func init() {
	proto.RegisterFile("AssetMantle/schema/data/base/linked_data.proto", fileDescriptor_a39ae47b07df7c69)
}

var fileDescriptor_a39ae47b07df7c69 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xeb, 0x40,
	0x18, 0x85, 0x33, 0xb9, 0xe5, 0xc2, 0x9d, 0xde, 0x4b, 0x2f, 0xc1, 0x45, 0x29, 0x92, 0x16, 0x45,
	0x6c, 0x11, 0x26, 0xa0, 0xbb, 0xec, 0x1a, 0x52, 0x34, 0x60, 0xa1, 0xb4, 0x3b, 0x09, 0x84, 0x69,
	0x32, 0x24, 0x83, 0x6d, 0xa6, 0x64, 0xa6, 0xe2, 0x23, 0x74, 0xe9, 0x23, 0x88, 0x4b, 0x9f, 0x44,
	0xdc, 0xd8, 0xa5, 0x4b, 0x49, 0x77, 0x3e, 0x85, 0xcc, 0xa4, 0xd6, 0x16, 0x4a, 0x76, 0xc3, 0x9c,
	0xef, 0x3f, 0xe7, 0xf0, 0xff, 0x10, 0x75, 0x39, 0x27, 0xa2, 0x8f, 0x53, 0x31, 0x21, 0x16, 0x0f,
	0x13, 0x32, 0xc5, 0x56, 0x84, 0x05, 0xb6, 0xc6, 0x98, 0x13, 0x6b, 0x42, 0xd3, 0x5b, 0x12, 0x05,
	0xf2, 0x03, 0xcd, 0x32, 0x26, 0x98, 0x71, 0xb8, 0xc5, 0xa3, 0x82, 0x47, 0x4a, 0x96, 0x7c, 0xe3,
	0x20, 0x66, 0x31, 0x53, 0xa0, 0x25, 0x5f, 0xc5, 0x4c, 0xa3, 0xb3, 0x27, 0x83, 0x46, 0xbc, 0x88,
	0x48, 0x30, 0x4f, 0x02, 0x1a, 0xad, 0xd1, 0xb3, 0x32, 0x94, 0x8b, 0x8c, 0xa6, 0xf1, 0x06, 0x3e,
	0x7a, 0x03, 0x10, 0x5e, 0xab, 0x86, 0x2e, 0x16, 0xd8, 0xe8, 0xc1, 0xbf, 0x19, 0xe1, 0x6c, 0x9e,
	0x85, 0x24, 0xa0, 0x41, 0x54, 0x07, 0x2d, 0xd0, 0xae, 0x9e, 0x1f, 0xa3, 0x3d, 0x8d, 0x69, 0xc4,
	0x55, 0x61, 0x74, 0x85, 0x79, 0xe2, 0xb9, 0x43, 0xf8, 0x3d, 0xe8, 0xb9, 0x86, 0x07, 0xff, 0x91,
	0x7b, 0x41, 0x52, 0x4e, 0x59, 0xaa, 0x7c, 0x74, 0xe5, 0x73, 0x52, 0xea, 0x33, 0x52, 0xd5, 0x3c,
	0x77, 0x58, 0xdd, 0xcc, 0x7a, 0xae, 0xd1, 0x81, 0xff, 0x39, 0xc9, 0xee, 0x68, 0x48, 0x02, 0x92,
	0x46, 0x33, 0x46, 0x53, 0x51, 0xff, 0xd5, 0x02, 0xed, 0x3f, 0xc3, 0xda, 0xfa, 0xbf, 0xb7, 0xfe,
	0xb6, 0x2b, 0x8b, 0xc7, 0xa6, 0xe6, 0x2c, 0xf4, 0x97, 0xdc, 0x04, 0xcb, 0xdc, 0x04, 0x1f, 0xb9,
	0x09, 0x1e, 0x56, 0xa6, 0xb6, 0x5c, 0x99, 0xda, 0xfb, 0xca, 0xd4, 0x60, 0x2b, 0x64, 0x53, 0x54,
	0xb6, 0x7c, 0xa7, 0xf6, 0xb3, 0x8b, 0x81, 0xdc, 0xcf, 0x00, 0xdc, 0x9c, 0xc6, 0x54, 0x24, 0xf3,
	0x31, 0x0a, 0xd9, 0xd4, 0x2a, 0x3b, 0xf4, 0x93, 0x5e, 0xe9, 0x8e, 0x5c, 0xe7, 0x59, 0xdf, 0x39,
	0xef, 0xa8, 0x48, 0x90, 0x86, 0xc8, 0xc1, 0x9c, 0xbc, 0xee, 0xc8, 0x7e, 0x21, 0xfb, 0x52, 0xf6,
	0xa5, 0x9c, 0xeb, 0xed, 0x32, 0xd9, 0xbf, 0x1c, 0x38, 0x7d, 0x22, 0xb0, 0x0c, 0xfd, 0xd4, 0x9b,
	0x5b, 0xa8, 0x6d, 0x17, 0xac, 0x6d, 0x4b, 0xd8, 0xb6, 0x25, 0x3d, 0xfe, 0xad, 0x6e, 0x7c, 0xf1,
	0x15, 0x00, 0x00, 0xff, 0xff, 0x76, 0xe9, 0x58, 0x66, 0xa1, 0x02, 0x00, 0x00,
}

func (m *LinkedData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LinkedData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LinkedData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ServiceEndpoint) > 0 {
		i -= len(m.ServiceEndpoint)
		copy(dAtA[i:], m.ServiceEndpoint)
		i = encodeVarintLinkedData(dAtA, i, uint64(len(m.ServiceEndpoint)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ExtensionID != nil {
		{
			size, err := m.ExtensionID.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLinkedData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ResourceID != nil {
		{
			size, err := m.ResourceID.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLinkedData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLinkedData(dAtA []byte, offset int, v uint64) int {
	offset -= sovLinkedData(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LinkedData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceID != nil {
		l = m.ResourceID.Size()
		n += 1 + l + sovLinkedData(uint64(l))
	}
	if m.ExtensionID != nil {
		l = m.ExtensionID.Size()
		n += 1 + l + sovLinkedData(uint64(l))
	}
	l = len(m.ServiceEndpoint)
	if l > 0 {
		n += 1 + l + sovLinkedData(uint64(l))
	}
	return n
}

func sovLinkedData(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLinkedData(x uint64) (n int) {
	return sovLinkedData(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LinkedData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLinkedData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LinkedData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LinkedData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLinkedData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResourceID == nil {
				m.ResourceID = &base.HashID{}
			}
			if err := m.ResourceID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtensionID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLinkedData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtensionID == nil {
				m.ExtensionID = &base.StringID{}
			}
			if err := m.ExtensionID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLinkedData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLinkedData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLinkedData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLinkedData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLinkedData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLinkedData(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLinkedData
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLinkedData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLinkedData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLinkedData
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLinkedData
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLinkedData
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLinkedData        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLinkedData          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLinkedData = fmt.Errorf("proto: unexpected end of group")
)
